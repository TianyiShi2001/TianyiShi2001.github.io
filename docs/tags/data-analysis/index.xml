<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data analysis on Tianyi@Oxford</title>
    <link>/tags/data-analysis.html</link>
    <description>Recent content in data analysis on Tianyi@Oxford</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/data-analysis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Techniques</title>
      <link>/notes/techniques.html</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/notes/techniques.html</guid>
      <description>Protein Structure Homology Modelling Swiss Model Model Evaluation GMQE (global model quality estimation) 0-1, higher better combines properties from the target-alignment and the template search method replecting the expected accuracy of a model built with that alignment and the template and the coverage of the target computed before modelling and after modelling. The latter also takes into account the QMEAN QMEAN QMEAN z score: around 0: ideal; &amp;lt; -4.0: low quality QMEAN is a composite estimator based on different geometrical properties and provides both global and local absolute quality estimates on the basis of one single model the QMEAN z-score provides an estimate of the ‘degree of nativeness’ of the structural features observed in the model on a global scale.</description>
    </item>
    
    <item>
      <title>2019–20 outbreak of novel coronavirus &#39;2019-nCoV&#39;</title>
      <link>/special/wuhan-coronavirus.html</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/special/wuhan-coronavirus.html</guid>
      <description>About the virus See Wikipedia Statistics Source Code library(tidyverse) library(lubridate) library(scales) library(RColorBrewer) library(maps) library(mapdata) library(maptools) if(&amp;#39;content&amp;#39; %in% dir()){setwd(&amp;#39;content/special/data&amp;#39;)} source(&amp;#39;ncov_commons.R&amp;#39;) # read data --------------------------------------------------------------- read_ncov &amp;lt;- function(sheet, caseType, fn = &amp;#39;wuhan.xlsx&amp;#39;){ readxl::read_excel(fn, sheet = sheet) %&amp;gt;% replace(is.na(.), 0) %&amp;gt;% mutate(date = as_date(date)) %&amp;gt;% mutate_at(-1, cumsum) %&amp;gt;% gather(location, !!caseType, -1) %&amp;gt;% mutate(location=as_factor(location)) } calc_ncov_params &amp;lt;- function(df){ mutate(df, current = all-death-cure, deathRate = death/all, cureRate = cure/all) } ncov &amp;lt;- read_ncov(&amp;#39;incidence-wiki&amp;#39;, &amp;#39;all&amp;#39;) %&amp;gt;%</description>
    </item>
    
  </channel>
</rss>
